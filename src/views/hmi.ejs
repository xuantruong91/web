<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SCADA Web</title>
    <link rel="stylesheet" href="styles.css">
</head>
<style>
    /* Reset mặc định */
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        text-align: center;
    }

    /* Thanh điều hướng */
    .topnav {
        width: 100%;
        display: flex;
        justify-content: center;
        background-color: #2e2699;
        padding: 10px 0;
        position: fixed;
        top: 0;
        left: 0;
        z-index: 1000;
    }

    .topnav a {
        color: white;
        text-align: center;
        padding: 14px 20px;
        text-decoration: none;
        font-size: 17px;
    }

    .topnav a:hover {
        background-color: #ddd;
        color: black;
    }

    .topnav a.active {
        background-color: #2989c0;
    }

    /* Bố cục chính: Bảng - HMI - Nút điều khiển */
    .main-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 80px 20px 20px;
        gap: 20px;
    }

    /* Bảng trạng thái */
    .table-container {
        width: 25%;
        background: rgb(13, 197, 230);
        padding: 15px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        border-radius: 10px;
        text-align: left;
    }

    .table-container h3 {
        text-align: center; 
    }

    table {
        width: 100%;
        border-collapse: collapse;
    }

    th,
    td {
        padding: 10px;
        border-bottom: 1px solid #ddd;
    }

    th {
        background-color: #171817;
        color: white;
    }

    tr:hover {
        background-color: #f1f1f1;
    }

    /* Khu vực HMI */
    .hmi-container {
        width: 50%;
    }

    .scada-image {
        width: 100%;
        max-width: 500px;
        border-radius: 10px;
    }

    /* Khu vực nút điều khiển */
    .controls-container {
        width: 30%;
        background: rgb(13, 188, 211);
        padding: 15px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        border-radius: 10px;
    }

    .controls-container h3 {
        text-align: center;
    }

    .switch {
        display: block;
        width: 80px;
        height: 30px;
        margin: 5px auto;
        background-color: gray;
        color: white;
        border: none;
        cursor: pointer;
        font-weight: bold;
        border-radius: 5px;
    }

    .switch.on {
        background-color: green;
    }
</style>

<body>

    <!-- Thanh điều hướng -->
    <div class="topnav">
        <div class="left-nav">
            <a href="/">Home</a>
            <a href="/create_user">Create Users</a>
            <a href="/list">List User</a>
            <a href="/data">DATA</a>
            <a class="active" href="/hmi">HMI</a>
        </div>
    </div>

    <h2>SCADA Web Control</h2>

    <div class="main-container">
        <!-- Bảng hiển thị trạng thái thiết bị -->
        <div class="table-container">
            <h3>Device Status</h3>
            <table>
                <thead>
                    <tr>
                        <th>Device</th>
                        <th>State</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Mode</td>
                        <td id="status-mode">MANU</td>
                    </tr>
                    <tr>
                        <td>Motor 1</td>
                        <td id="status-motor1">OFF</td>
                    </tr>
                    <tr>
                        <td>Motor 2</td>
                        <td id="status-motor2">OFF</td>
                    </tr>
                    <tr>
                        <td>Mixer</td>
                        <td id="status-mixer">OFF</td>
                    </tr>
                    <tr>
                        <td>Fan thông gió</td>
                        <td id="status-fan_thong_gio">OFF</td>
                    </tr>
                    <tr>
                        <td>Fan hút nhiệt</td>
                        <td id="status-fan_hut_nhiet">OFF</td>
                    </tr>
                    <tr>
                        <td>Đèn sưởi</td>
                        <td id="status-den_suoi">OFF</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <!-- Màn hình HMI -->
        <div class="hmi-container">
            <img src="/images/SCA1.png" class="scada-image">
        </div>

        <!-- Khu vực nút điều khiển -->
        <div class="controls-container">
            <h3>Controls</h3>
            <table>
                <tr>
                    <td>Mode</td>
                    <td><button class="switch" id="mode">MANU</button></td>
                </tr>
                <tr>
                    <td>Motor 1</td>
                    <td><button class="switch" id="motor1">OFF</button></td>
                </tr>
                <tr>
                    <td>Motor 2</td>
                    <td><button class="switch" id="motor2">OFF</button></td>
                </tr>
                <tr>
                    <td>Mixer</td>
                    <td><button class="switch" id="mixer">OFF</button></td>
                </tr>
                <tr>
                    <td>Fan thông gió</td>
                    <td><button class="switch" id="fan_thong_gio">OFF</button></td>
                </tr>
                <tr>
                    <td>Fan hút nhiệt</td>
                    <td><button class="switch" id="fan_hut_nhiet">OFF</button></td>
                </tr>
                <tr>
                    <td>Đèn sưởi</td>
                    <td><button class="switch" id="den_suoi">OFF</button></td>
                </tr>
            </table>
        </div>
    </div>

    <script>
        function toggleSwitch(button, statusElement, deviceName) {
            let newState = button.textContent === "ON" ? "OFF" : "ON";
            if (deviceName === "mode") {
                newState = button.textContent === "AUTO" ? "MANU" : "AUTO";
            }
            button.textContent = newState;
            statusElement.textContent = newState;
            fetch('/api/button-press', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ device: deviceName, state: newState === "ON" || newState === "AUTO" })
            });
        }
        
        document.querySelectorAll('.switch').forEach(button => {
            button.addEventListener("click", () => {
                const statusId = "status-" + button.id;
                toggleSwitch(button, document.getElementById(statusId), button.id);
            });
        });

        function updateUIFromPLC(data) {
            ["mode", "motor1", "motor2", "mixer", "fan_thong_gio", "fan_hut_nhiet", "den_suoi"].forEach(device => {
                let state = data[device] ? "ON" : "OFF";
                if (device === "mode") state = data[device] ? "AUTO" : "MANU";
                document.getElementById(device).textContent = state;
                document.getElementById("status-" + device).textContent = state;
            });
        }

        function connectWebSocket() {
            const protocol = window.location.protocol === 'https:' ? 'wss://' : 'ws://';
            const socket = new WebSocket(`${protocol}${window.location.host}`);
            socket.onmessage = (event) => {
                try {
                    const message = JSON.parse(event.data);
                    if (message.type === 'status') updateUIFromPLC(message.data);
                } catch (error) {
                    console.error('Error processing message:', error);
                }
            };
            socket.onclose = () => setTimeout(connectWebSocket, 1000);
        }
        connectWebSocket();

        fetch('/api/plc-status')
            .then(response => response.json())
            .then(data => { if (data.success) updateUIFromPLC(data.data); })
            .catch(error => console.error('Error fetching initial state:', error));
    </script>

</body>
</html>